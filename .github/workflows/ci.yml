name: CI

on:
  push:
    branches: [ main, develop, feat/*, fix/* ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('backend/backend/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r backend/backend/requirements.txt
        pip install pytest pytest-asyncio httpx fastapi
    
    - name: Run basic tests
      run: |
        cd backend/backend
        python -c "import fastapi; print('FastAPI import successful')"
        python -c "from models.database import get_db; print('Database import successful')"
    
    - name: Lint with flake8
      run: |
        pip install flake8
        cd backend/backend
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics || true
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics || true
    
    - name: Check code formatting
      run: |
        pip install black
        cd backend/backend
        black --check --diff . || true

  security:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r backend/backend/requirements.txt
    
    - name: Run security checks
      run: |
        pip install bandit
        cd backend/backend
        bandit -r . -f json -o bandit-report.json || true
        bandit -r . -f txt -o bandit-report.txt || true 