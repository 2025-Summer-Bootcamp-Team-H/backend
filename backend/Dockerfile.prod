# 프로덕션용 Dockerfile
FROM python:3.11-slim

# 로케일 설정 추가 (한글 파일명 지원)
ENV LANG=C.UTF-8
ENV LC_ALL=C.UTF-8
ENV PYTHONIOENCODING=utf-8
ENV PYTHONUTF8=1

WORKDIR /app

# 시스템 패키지 설치 (PDF 처리용 추가)
RUN apt-get update && apt-get install -y \
    gcc \
    g++ \
    poppler-utils \
    tesseract-ocr \
    tesseract-ocr-kor \
    locales \
    && rm -rf /var/lib/apt/lists/*

# 로케일 생성 (한글 지원)
RUN locale-gen ko_KR.UTF-8
RUN locale-gen en_US.UTF-8
ENV LANG=ko_KR.UTF-8
ENV LC_ALL=ko_KR.UTF-8
ENV LC_CTYPE=ko_KR.UTF-8

# 보안을 위한 비루트 사용자 생성
RUN groupadd -r appuser && useradd -r -g appuser appuser

# Python 의존성 설치
COPY requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt

# 애플리케이션 코드 복사
COPY . .

# 업로드 디렉토리 권한 설정
RUN mkdir -p /app/uploads/diagnosis /app/uploads/receipts && \
    chown -R appuser:appuser /app

# 비루트 사용자로 전환
USER appuser

# PYTHONPATH 환경변수 설정
ENV PYTHONPATH=/app

# 포트 노출
EXPOSE 8000

# 프로덕션 모드로 실행 (reload 제거)
CMD ["uvicorn", "main:app", "--host", "0.0.0.0", "--port", "8000", "--workers", "4"]

# 트레이싱/모니터링 환경변수의 기본값을 Dockerfile.prod에 추가한다. (실제 값은 docker-compose/env.prod에서 주입)
ENV OTEL_EXPORTER_OTLP_TRACES_ENDPOINT=http://localhost:4318/v1/traces
ENV OTEL_SERVICE_NAME=insurance_backend
ENV PROMETHEUS_METRICS_ENABLED=true
ENV LOG_LEVEL=INFO
ENV LOG_FILE=./logs/app.log 